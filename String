String은 한 번 만들어지면, 문자를 추가하거나 삭제할 수 없는 변경 불가능한 타입

String my_str = "abcdef"; // java는 변수 앞에 형 선언

/* 문자열 길이*/
str.length(); // 문자열길이 반환
str.isEmpty(); // 길이가 0이면 True, 아니면 Faslse 반환

/*문자열 자르기*/
str.split("c"); // "c"를 기준으로 문자열을 분리해서 배열로 반환
str.split(); // 한 문자씩 분리해서 배열로 반환
str.splic("c",1); // "c"를 기준, 배열의 크기 1 

System.out.println(my_str.split("c")[0]); // "ab" 출력

String[] str1 = my_string.split("c"); // 반복문으로 자른 문자열의 배열
for (String s: str1){ 
	// 배열에서만 가능한 for 문 
	System.out.println(s); // split 된 배열의 각 요소 출력 
}

//(2) substring 함수
my_str.substring(2); // 해당 Index 문자열부터 출력 : "cdef" 출력
my_str.substring(0, 2); // start idx ~ end idx -1 까지 출력 : "ab" 출력

//(3) for 문 사용
for(int i = 0; i < my_string.length(); i ++) {
	my_string.charAt(i); //charAt 함수 : 해당 Index의 문자를 Return 
}

//(4) trim 
my_str.trim() // my_str의 앞 뒤 공백 제거, 문자열 사이의 공백은 제거 X 

/* 대소문자 변경 */
String str = "HellO WOrlD!"
str = str.toUpperCase(); // 문자열 전체 대문자로 : HELLO WORLD!
str = str.toLowerCase(); // 문자열 전체 소문자로 : hello world!
c = Character.toUpperCase('c'); //단일 문자 대문자로
c = Character.toLowerCase('C'); //단일 문자 소문자로

/*char의 대소문자 확인*/
char letter = 'a';
Charcter.isLowerCase(letter); //소문자니까 true 반환 

/*문자열 비교*/
String s = "Starbucks";
s.equals("Starbucks"); // 같기 때문에 True , 아니라면 False 반환
s.equalsIgnoreCase("sta"); // 문자열 간의 대소문자를 무시하고 비교 후 값 반환
s.contains("buck"); // 포함되니까 True, 아니면 False 반환 

s.startsWith("S"); // "S"로 시작하는지
s.endsWith("ks"); // "ks"로 끝나는지

/*위치 찾기*/
String text = "Hello, world!";
int index1 = text.indexOf("world"); // 문자열이 처음 나타나는 위치의 인덱스 반환 : 7 출력
int index2 = text.indexOf('o'); // 주어진 문자가 처음 나타나는 인덱스 반환 : 4 출력
int index3 = text.indexOf('o', 5); // 'o'라는 문자/문자열이 주어진 인덱스 5 이후에 처음으로 나타는 인덱스 반환 : 7 출력
int index4 = text.lastIndexOf("o"); // "o"문자의 마지막 인덱스 반환 : 8 출력 

/*형 변환*/
Integer.parseInt("320") // 문자열 -> 숫자로 변환 : 출력 320
Integer.toString(320) // 숫자 -> 문자열로 변환 : 출력 "320"

/*문자열 뒤집기*/
String str = "hello";
String str = new StringBuilder(str).reverse().toString(); 
//출력 : olleh

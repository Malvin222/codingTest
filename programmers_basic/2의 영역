문제 설명
정수 배열 arr가 주어집니다. 배열 안의 2가 모두 포함된 가장 작은 연속된 부분 배열을 return 하는 solution 함수를 완성해 주세요.

단, arr에 2가 없는 경우 [-1]을 return 합니다.
입출력 예
arr	result
[1, 2, 1, 4, 5, 2, 9]	[2, 1, 4, 5, 2]
[1, 2, 1]	[2]
[1, 1, 1]	[-1]
[1, 2, 1, 2, 1, 10, 2, 1]	[2, 1, 2, 1, 10, 2]
import java.util.ArrayList;

class Solution {
    public int[] solution(int[] arr) {
        ArrayList<Integer> twoList = new ArrayList<>();
        ArrayList<Integer> List = new ArrayList<>();
        for(int i=0; i<arr.length; i++){
            if(arr[i] == 2){
                twoList.add(i);
            }
        }
        if(twoList.size()>1){
            for(int i=twoList.get(0); i<=twoList.get(twoList.size()-1); i++){
                List.add(arr[i]);
            }
        }else if(twoList.size() == 0 ){
            List.add(-1);
        }else{
            List.add(2);
        }
        
        int[] answer = new int[List.size()];
        for(int i=0; i<List.size(); i++){
            answer[i] = List.get(i);
        } 
        return answer;
    }
}
==============
import java.util.*;
class Solution {
    public ArrayList<Integer> solution(int[] arr) {
        ArrayList<Integer> answer = new ArrayList<Integer>();
        int start = -1;
        int end = -1;
        for(int i = 0; i<arr.length; i++){
            if(arr[i]==2){
                start = i;
                break;
            }
        }
        for(int i = arr.length-1; i>=0; i--){
            if(arr[i]==2){
                end = i;
                break;
            }
        }
        if(start==-1 && end==-1){
            answer.add(-1);
        } else{
            for(int i = start; i<=end; i++){
                answer.add(arr[i]);
            }
        }

        return answer;
    }
}

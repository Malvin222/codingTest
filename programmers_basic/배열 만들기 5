문제 설명
문자열 배열 intStrs와 정수 k, s, l가 주어집니다. intStrs의 원소는 숫자로 이루어져 있습니다.

배열 intStrs의 각 원소마다 s번 인덱스에서 시작하는 길이 l짜리 부분 문자열을 잘라내 정수로 변환합니다. 
이때 변환한 정수값이 k보다 큰 값들을 담은 배열을 return 하는 solution 함수를 완성해 주세요.
입출력 예
intStrs	k	s	l	result
["0123456789","9876543210","9999999999999"]	50000	5	5	[56789, 99999]
import java.util.ArrayList;

class Solution {
    public int[] solution(String[] intStrs, int k, int s, int l) {
        ArrayList<Integer> resultList = new ArrayList<>();

        for (String str : intStrs) {
            // 유효한 범위 내에서 부분 문자열을 추출
            if (s >= 0 && s < str.length() && s + l <= str.length()) {
                String substring = str.substring(s, s + l);

                // 빈 문자열이 아니라면 정수로 변환
                if (!substring.isEmpty()) {
                    int parsedInt = Integer.parseInt(substring);

                    // k보다 큰지 확인하고 크다면 결과 리스트에 추가
                    if (parsedInt > k) {
                        resultList.add(parsedInt);
                    }
                }
            }
        }

        // 결과 리스트를 배열로 변환
        int[] answer = new int[resultList.size()];
        for (int i = 0; i < resultList.size(); i++) {
            answer[i] = resultList.get(i);
        }

        return answer;
    }
}
import java.util.ArrayList;

class Solution {
    public int[] solution(String[] intStrs, int k, int s, int l) {

        ArrayList<Integer> list = new ArrayList<>();

        for (String myStr : intStrs) {
            int num = Integer.parseInt(myStr.substring(s, s + l));
            if (k < num)
                list.add(num);
        }

        return list.stream().mapToInt(i -> i).toArray();
    }
}

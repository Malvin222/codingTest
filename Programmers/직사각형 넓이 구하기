문제 설명
2차원 좌표 평면에 변이 축과 평행한 직사각형이 있습니다. 
직사각형 네 꼭짓점의 좌표 [[x1, y1], [x2, y2], [x3, y3], [x4, y4]]가 담겨있는 배열 dots가 매개변수로 주어질 때, 
직사각형의 넓이를 return 하도록 solution 함수를 완성해보세요.

입출력 예
dots	result
[[1, 1], [2, 1], [2, 2], [1, 2]]	1
[[-1, -1], [1, 1], [1, -1], [-1, 1]]	4

class Solution {
    public int solution(int[][] dots) {
        int answer = 0;
        int r1 = 0;
        if(Math.abs(dots[0][0] - dots[1][0]) != 0){
            r1 = Math.abs(dots[0][0] - dots[1][0]);
        }else if(Math.abs(dots[0][0] - dots[2][0]) != 0){
            r1 = Math.abs(dots[0][0] - dots[2][0]);
        }else {
            Math.abs(dots[0][0] - dots[3][0]);
        }
        
        int r2 = 0;
        if(Math.abs(dots[0][1] - dots[1][1]) != 0){
            r2 = Math.abs(dots[0][1] - dots[1][1]);
        }else if(Math.abs(dots[0][1] - dots[2][1]) != 0){
            r2 = Math.abs(dots[0][1] - dots[2][1]);
        }else{
            r2 = Math.abs(dots[0][1] - dots[3][1]);
        }
        
        answer = r1 * r2;
        return answer;
    }
}

======

class Solution {
    public int solution(int[][] dots) {
        int answer = 0;
        int tmp = dots[0][0];
        int tmp2 = 0;
        int tmp3 = 0;
        for(int i = 1; i<dots.length; i++){
            if(dots[i][0] == tmp){
                tmp2 = Math.abs(dots[i][1] - dots[0][1]);
            }else{
                tmp3 = Math.abs(dots[i][0] - dots[0][0]);
            }
        }
        answer = tmp2 * tmp3;
        return answer;
    }
}
